<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="806.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="789" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="789" > </text>
<g id="frames">
<g >
<title>asm_sysvec_irq_work (23,719,939 samples, 0.01%)</title><rect x="859.7" y="325" width="0.1" height="15.0" fill="rgb(244,103,11)" rx="2" ry="2" />
<text  x="862.67" y="335.5" ></text>
</g>
<g >
<title>__schedule (44,745,195 samples, 0.02%)</title><rect x="10.6" y="277" width="0.2" height="15.0" fill="rgb(234,127,43)" rx="2" ry="2" />
<text  x="13.56" y="287.5" ></text>
</g>
<g >
<title>do_filp_open (22,678,170 samples, 0.01%)</title><rect x="1189.4" y="629" width="0.2" height="15.0" fill="rgb(209,3,39)" rx="2" ry="2" />
<text  x="1192.44" y="639.5" ></text>
</g>
<g >
<title>do_futex (114,083,114 samples, 0.05%)</title><rect x="10.5" y="341" width="0.5" height="15.0" fill="rgb(247,104,5)" rx="2" ry="2" />
<text  x="13.45" y="351.5" ></text>
</g>
<g >
<title>usb_giveback_urb_bh (23,121,933 samples, 0.01%)</title><rect x="436.9" y="261" width="0.1" height="15.0" fill="rgb(219,130,29)" rx="2" ry="2" />
<text  x="439.87" y="271.5" ></text>
</g>
<g >
<title>__send_signal_locked (34,385,249 samples, 0.01%)</title><rect x="438.0" y="245" width="0.2" height="15.0" fill="rgb(219,67,17)" rx="2" ry="2" />
<text  x="441.00" y="255.5" ></text>
</g>
<g >
<title>task_tick_fair (67,420,224 samples, 0.03%)</title><rect x="1187.9" y="469" width="0.3" height="15.0" fill="rgb(239,203,13)" rx="2" ry="2" />
<text  x="1190.86" y="479.5" ></text>
</g>
<g >
<title>input_to_handler (22,621,443 samples, 0.01%)</title><rect x="856.3" y="101" width="0.1" height="15.0" fill="rgb(246,82,19)" rx="2" ry="2" />
<text  x="859.25" y="111.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (39,311,097 samples, 0.02%)</title><rect x="437.8" y="245" width="0.2" height="15.0" fill="rgb(210,108,17)" rx="2" ry="2" />
<text  x="440.79" y="255.5" ></text>
</g>
<g >
<title>do_futex (76,503,633 samples, 0.03%)</title><rect x="12.4" y="341" width="0.4" height="15.0" fill="rgb(235,8,20)" rx="2" ry="2" />
<text  x="15.39" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (48,439,412 samples, 0.02%)</title><rect x="96.8" y="293" width="0.2" height="15.0" fill="rgb(246,229,50)" rx="2" ry="2" />
<text  x="99.77" y="303.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_state&lt;std::_Bind&lt;bool  (84,200,750,225 samples, 36.57%)</title><rect x="10.1" y="517" width="431.4" height="15.0" fill="rgb(209,115,21)" rx="2" ry="2" />
<text  x="13.06" y="527.5" >std::__future_base::_Task_state&lt;std::_Bind&lt;bool </text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (59,697,255 samples, 0.03%)</title><rect x="516.7" y="309" width="0.3" height="15.0" fill="rgb(250,53,9)" rx="2" ry="2" />
<text  x="519.66" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (49,736,832 samples, 0.02%)</title><rect x="96.8" y="309" width="0.2" height="15.0" fill="rgb(216,222,39)" rx="2" ry="2" />
<text  x="99.77" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (313,046,615 samples, 0.14%)</title><rect x="858.0" y="293" width="1.6" height="15.0" fill="rgb(225,52,29)" rx="2" ry="2" />
<text  x="861.03" y="303.5" ></text>
</g>
<g >
<title>schedule (44,745,195 samples, 0.02%)</title><rect x="10.6" y="293" width="0.2" height="15.0" fill="rgb(237,116,11)" rx="2" ry="2" />
<text  x="13.56" y="303.5" ></text>
</g>
<g >
<title>witness (80,246,883,780 samples, 34.85%)</title><rect x="449.6" y="373" width="411.2" height="15.0" fill="rgb(250,105,19)" rx="2" ry="2" />
<text  x="452.63" y="383.5" >witness</text>
</g>
<g >
<title>__do_softirq (63,951,054 samples, 0.03%)</title><rect x="438.2" y="293" width="0.4" height="15.0" fill="rgb(223,76,40)" rx="2" ry="2" />
<text  x="441.23" y="303.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;bool&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_state&lt;std::_Bind&lt;bool  (84,202,163,721 samples, 36.57%)</title><rect x="10.1" y="565" width="431.4" height="15.0" fill="rgb(221,206,46)" rx="2" ry="2" />
<text  x="13.05" y="575.5" >std::enable_if&lt;is_invocable_r_v&lt;std::unique_ptr&lt;std::__fut..</text>
</g>
<g >
<title>futex_wake (53,345,568 samples, 0.02%)</title><rect x="442.7" y="309" width="0.3" height="15.0" fill="rgb(239,209,28)" rx="2" ry="2" />
<text  x="445.71" y="319.5" ></text>
</g>
<g >
<title>update_curr (27,506,269 samples, 0.01%)</title><rect x="439.6" y="181" width="0.2" height="15.0" fill="rgb(232,215,45)" rx="2" ry="2" />
<text  x="442.64" y="191.5" ></text>
</g>
<g >
<title>asm_common_interrupt (154,204,167 samples, 0.07%)</title><rect x="436.4" y="341" width="0.8" height="15.0" fill="rgb(229,46,24)" rx="2" ry="2" />
<text  x="439.37" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_futex (118,250,269 samples, 0.05%)</title><rect x="10.4" y="357" width="0.6" height="15.0" fill="rgb(225,133,52)" rx="2" ry="2" />
<text  x="13.43" y="367.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (166,143,151,164 samples, 72.15%)</title><rect x="10.1" y="597" width="851.3" height="15.0" fill="rgb(251,134,40)" rx="2" ry="2" />
<text  x="13.05" y="607.5" >std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt; </text>
</g>
<g >
<title>tick_sched_handle (24,226,181 samples, 0.01%)</title><rect x="516.8" y="229" width="0.1" height="15.0" fill="rgb(219,85,42)" rx="2" ry="2" />
<text  x="519.81" y="239.5" ></text>
</g>
<g >
<title>common_interrupt (20,261,833 samples, 0.01%)</title><rect x="96.4" y="325" width="0.1" height="15.0" fill="rgb(233,18,37)" rx="2" ry="2" />
<text  x="99.39" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (145,987,701 samples, 0.06%)</title><rect x="858.7" y="229" width="0.8" height="15.0" fill="rgb(232,89,0)" rx="2" ry="2" />
<text  x="861.74" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (105,248,656 samples, 0.05%)</title><rect x="858.9" y="197" width="0.6" height="15.0" fill="rgb(252,100,37)" rx="2" ry="2" />
<text  x="861.94" y="207.5" ></text>
</g>
<g >
<title>check_cpu_itimer (25,466,548 samples, 0.01%)</title><rect x="1187.0" y="533" width="0.2" height="15.0" fill="rgb(235,24,32)" rx="2" ry="2" />
<text  x="1190.04" y="543.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (48,508,142 samples, 0.02%)</title><rect x="443.0" y="341" width="0.2" height="15.0" fill="rgb(240,48,16)" rx="2" ry="2" />
<text  x="445.99" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (44,706,578 samples, 0.02%)</title><rect x="96.8" y="277" width="0.2" height="15.0" fill="rgb(227,85,0)" rx="2" ry="2" />
<text  x="99.78" y="287.5" ></text>
</g>
<g >
<title>all (230,274,730,502 samples, 100%)</title><rect x="10.0" y="757" width="1180.0" height="15.0" fill="rgb(235,122,44)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (68,873,927 samples, 0.03%)</title><rect x="856.1" y="229" width="0.4" height="15.0" fill="rgb(220,164,24)" rx="2" ry="2" />
<text  x="859.15" y="239.5" ></text>
</g>
<g >
<title>__lock_task_sighand (41,191,990 samples, 0.02%)</title><rect x="437.8" y="261" width="0.2" height="15.0" fill="rgb(207,125,32)" rx="2" ry="2" />
<text  x="440.78" y="271.5" ></text>
</g>
<g >
<title>perf_event_task_tick (22,595,363 samples, 0.01%)</title><rect x="859.0" y="181" width="0.1" height="15.0" fill="rgb(230,104,23)" rx="2" ry="2" />
<text  x="862.01" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (185,650,929 samples, 0.08%)</title><rect x="1187.3" y="565" width="1.0" height="15.0" fill="rgb(220,10,9)" rx="2" ry="2" />
<text  x="1190.32" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;bool&gt;, std::__future_base::_Result_base::_Deleter&gt; std::__invoke_impl&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;bool&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;bool&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_state&lt;std::_Bind&lt;bool  (84,201,211,783 samples, 36.57%)</title><rect x="10.1" y="549" width="431.4" height="15.0" fill="rgb(222,121,21)" rx="2" ry="2" />
<text  x="13.05" y="559.5" >std::unique_ptr&lt;std::__future_base::_Result&lt;bool&gt;, std::__..</text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;bool&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_state&lt;std::_Bind&lt;threadpool_primes (81,940,987,443 samples, 35.58%)</title><rect x="441.5" y="565" width="419.9" height="15.0" fill="rgb(215,125,46)" rx="2" ry="2" />
<text  x="444.53" y="575.5" >std::enable_if&lt;is_invocable_r_v&lt;std::unique_ptr&lt;std::__fu..</text>
</g>
<g >
<title>__hrtimer_run_queues (43,461,229 samples, 0.02%)</title><rect x="516.7" y="261" width="0.2" height="15.0" fill="rgb(229,84,3)" rx="2" ry="2" />
<text  x="519.72" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_futex (85,464,757 samples, 0.04%)</title><rect x="12.3" y="357" width="0.5" height="15.0" fill="rgb(231,107,11)" rx="2" ry="2" />
<text  x="15.34" y="367.5" ></text>
</g>
<g >
<title>[unknown] (34,203,370 samples, 0.01%)</title><rect x="1189.2" y="709" width="0.2" height="15.0" fill="rgb(225,146,28)" rx="2" ry="2" />
<text  x="1192.22" y="719.5" ></text>
</g>
<g >
<title>bool std::__invoke_impl&lt;bool, std::_Bind&lt;threadpool_primes (81,940,987,443 samples, 35.58%)</title><rect x="441.5" y="485" width="419.9" height="15.0" fill="rgb(248,200,53)" rx="2" ry="2" />
<text  x="444.53" y="495.5" >bool std::__invoke_impl&lt;bool, std::_Bind&lt;threadpool_primes</text>
</g>
<g >
<title>asm_common_interrupt (26,686,357 samples, 0.01%)</title><rect x="96.4" y="341" width="0.1" height="15.0" fill="rgb(212,49,51)" rx="2" ry="2" />
<text  x="99.39" y="351.5" ></text>
</g>
<g >
<title>input_event (25,039,208 samples, 0.01%)</title><rect x="856.2" y="149" width="0.2" height="15.0" fill="rgb(235,37,24)" rx="2" ry="2" />
<text  x="859.25" y="159.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,270,484 samples, 0.01%)</title><rect x="1187.2" y="581" width="0.1" height="15.0" fill="rgb(219,9,37)" rx="2" ry="2" />
<text  x="1190.19" y="591.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (21,838,007 samples, 0.01%)</title><rect x="442.2" y="373" width="0.1" height="15.0" fill="rgb(217,122,37)" rx="2" ry="2" />
<text  x="445.21" y="383.5" ></text>
</g>
<g >
<title>miller_rabin (82,552,362,343 samples, 35.85%)</title><rect x="18.2" y="405" width="423.0" height="15.0" fill="rgb(209,32,28)" rx="2" ry="2" />
<text  x="21.21" y="415.5" >miller_rabin</text>
</g>
<g >
<title>__do_softirq (54,552,782 samples, 0.02%)</title><rect x="857.7" y="277" width="0.3" height="15.0" fill="rgb(241,169,18)" rx="2" ry="2" />
<text  x="860.75" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (34,786,325 samples, 0.02%)</title><rect x="1189.4" y="693" width="0.2" height="15.0" fill="rgb(251,165,43)" rx="2" ry="2" />
<text  x="1192.44" y="703.5" ></text>
</g>
<g >
<title>_mcount (1,752,620,353 samples, 0.76%)</title><rect x="97.4" y="357" width="8.9" height="15.0" fill="rgb(238,195,12)" rx="2" ry="2" />
<text  x="100.36" y="367.5" ></text>
</g>
<g >
<title>mod_pow (61,619,629,559 samples, 26.76%)</title><rect x="873.0" y="645" width="315.7" height="15.0" fill="rgb(205,128,2)" rx="2" ry="2" />
<text  x="875.97" y="655.5" >mod_pow</text>
</g>
<g >
<title>[unknown] (166,170,571,944 samples, 72.16%)</title><rect x="10.0" y="725" width="851.5" height="15.0" fill="rgb(216,217,19)" rx="2" ry="2" />
<text  x="13.02" y="735.5" >[unknown]</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (62,270,572 samples, 0.03%)</title><rect x="96.7" y="325" width="0.3" height="15.0" fill="rgb(224,117,4)" rx="2" ry="2" />
<text  x="99.71" y="335.5" ></text>
</g>
<g >
<title>_mcount (50,268,754 samples, 0.02%)</title><rect x="20.6" y="389" width="0.3" height="15.0" fill="rgb(208,55,13)" rx="2" ry="2" />
<text  x="23.60" y="399.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (22,110,542 samples, 0.01%)</title><rect x="859.0" y="165" width="0.1" height="15.0" fill="rgb(206,55,18)" rx="2" ry="2" />
<text  x="862.01" y="175.5" ></text>
</g>
<g >
<title>arch_do_signal_or_restart (20,532,872 samples, 0.01%)</title><rect x="1186.9" y="565" width="0.1" height="15.0" fill="rgb(222,179,17)" rx="2" ry="2" />
<text  x="1189.86" y="575.5" ></text>
</g>
<g >
<title>_mcount (71,829,384 samples, 0.03%)</title><rect x="865.6" y="645" width="0.3" height="15.0" fill="rgb(213,17,4)" rx="2" ry="2" />
<text  x="868.55" y="655.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (175,509,072 samples, 0.08%)</title><rect x="1187.4" y="549" width="0.8" height="15.0" fill="rgb(228,227,18)" rx="2" ry="2" />
<text  x="1190.35" y="559.5" ></text>
</g>
<g >
<title>perf_event_task_tick (20,198,850 samples, 0.01%)</title><rect x="439.4" y="197" width="0.1" height="15.0" fill="rgb(211,171,47)" rx="2" ry="2" />
<text  x="442.44" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (293,277,089 samples, 0.13%)</title><rect x="438.6" y="293" width="1.5" height="15.0" fill="rgb(225,22,39)" rx="2" ry="2" />
<text  x="441.61" y="303.5" ></text>
</g>
<g >
<title>check_cpu_itimer (46,108,095 samples, 0.02%)</title><rect x="857.4" y="245" width="0.3" height="15.0" fill="rgb(212,149,15)" rx="2" ry="2" />
<text  x="860.43" y="255.5" ></text>
</g>
<g >
<title>__schedule (69,636,655 samples, 0.03%)</title><rect x="440.4" y="277" width="0.3" height="15.0" fill="rgb(229,148,26)" rx="2" ry="2" />
<text  x="443.35" y="287.5" ></text>
</g>
<g >
<title>task_work_run (88,226,301 samples, 0.04%)</title><rect x="857.2" y="277" width="0.5" height="15.0" fill="rgb(238,147,18)" rx="2" ry="2" />
<text  x="860.23" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (98,231,408 samples, 0.04%)</title><rect x="516.5" y="325" width="0.5" height="15.0" fill="rgb(238,203,49)" rx="2" ry="2" />
<text  x="519.46" y="335.5" ></text>
</g>
<g >
<title>rand (91,929,759 samples, 0.04%)</title><rect x="860.8" y="389" width="0.5" height="15.0" fill="rgb(249,46,13)" rx="2" ry="2" />
<text  x="863.84" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (308,655,730 samples, 0.13%)</title><rect x="858.1" y="277" width="1.5" height="15.0" fill="rgb(212,132,6)" rx="2" ry="2" />
<text  x="861.06" y="287.5" ></text>
</g>
<g >
<title>error_entry (43,716,567 samples, 0.02%)</title><rect x="441.0" y="341" width="0.2" height="15.0" fill="rgb(226,126,36)" rx="2" ry="2" />
<text  x="444.00" y="351.5" ></text>
</g>
<g >
<title>__irqentry_text_end (50,097,812 samples, 0.02%)</title><rect x="436.1" y="341" width="0.3" height="15.0" fill="rgb(252,197,31)" rx="2" ry="2" />
<text  x="439.10" y="351.5" ></text>
</g>
<g >
<title>hid_irq_in (65,730,476 samples, 0.03%)</title><rect x="856.2" y="213" width="0.3" height="15.0" fill="rgb(248,131,22)" rx="2" ry="2" />
<text  x="859.15" y="223.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (93,186,035 samples, 0.04%)</title><rect x="440.3" y="325" width="0.4" height="15.0" fill="rgb(238,107,6)" rx="2" ry="2" />
<text  x="443.27" y="335.5" ></text>
</g>
<g >
<title>__schedule (40,762,681 samples, 0.02%)</title><rect x="857.0" y="261" width="0.2" height="15.0" fill="rgb(241,44,43)" rx="2" ry="2" />
<text  x="859.99" y="271.5" ></text>
</g>
<g >
<title>input_event_dispose (23,993,091 samples, 0.01%)</title><rect x="856.2" y="133" width="0.2" height="15.0" fill="rgb(214,64,32)" rx="2" ry="2" />
<text  x="859.25" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (371,519,421 samples, 0.16%)</title><rect x="438.2" y="325" width="1.9" height="15.0" fill="rgb(243,7,50)" rx="2" ry="2" />
<text  x="441.22" y="335.5" ></text>
</g>
<g >
<title>sysvec_thermal (23,501,064 samples, 0.01%)</title><rect x="440.8" y="325" width="0.1" height="15.0" fill="rgb(213,107,31)" rx="2" ry="2" />
<text  x="443.82" y="335.5" ></text>
</g>
<g >
<title>execlists_submission_tasklet (25,937,035 samples, 0.01%)</title><rect x="856.0" y="245" width="0.1" height="15.0" fill="rgb(248,127,31)" rx="2" ry="2" />
<text  x="859.01" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void  (166,144,181,344 samples, 72.15%)</title><rect x="10.1" y="645" width="851.3" height="15.0" fill="rgb(205,203,4)" rx="2" ry="2" />
<text  x="13.05" y="655.5" >std::__invoke_result&lt;void </text>
</g>
<g >
<title>hrtimer_wakeup (55,072,953 samples, 0.02%)</title><rect x="438.8" y="261" width="0.3" height="15.0" fill="rgb(218,202,41)" rx="2" ry="2" />
<text  x="441.77" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (284,212,552 samples, 0.12%)</title><rect x="11.7" y="389" width="1.4" height="15.0" fill="rgb(219,194,43)" rx="2" ry="2" />
<text  x="14.68" y="399.5" ></text>
</g>
<g >
<title>__pthread_once_slow (166,144,649,738 samples, 72.15%)</title><rect x="10.1" y="709" width="851.3" height="15.0" fill="rgb(206,173,23)" rx="2" ry="2" />
<text  x="13.05" y="719.5" >__pthread_once_slow</text>
</g>
<g >
<title>__profil_counter (19,628,920 samples, 0.01%)</title><rect x="97.2" y="357" width="0.1" height="15.0" fill="rgb(214,213,15)" rx="2" ry="2" />
<text  x="100.22" y="367.5" ></text>
</g>
<g >
<title>posix_cpu_timers_work (83,399,311 samples, 0.04%)</title><rect x="857.2" y="261" width="0.5" height="15.0" fill="rgb(216,216,45)" rx="2" ry="2" />
<text  x="860.25" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (577,481,215 samples, 0.25%)</title><rect x="437.2" y="341" width="2.9" height="15.0" fill="rgb(234,51,33)" rx="2" ry="2" />
<text  x="440.16" y="351.5" ></text>
</g>
<g >
<title>handle_edge_irq (70,740,088 samples, 0.03%)</title><rect x="855.5" y="277" width="0.4" height="15.0" fill="rgb(217,54,16)" rx="2" ry="2" />
<text  x="858.55" y="287.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (153,133,586 samples, 0.07%)</title><rect x="441.5" y="389" width="0.8" height="15.0" fill="rgb(209,98,47)" rx="2" ry="2" />
<text  x="444.53" y="399.5" ></text>
</g>
<g >
<title>__mcount_internal (370,730,726 samples, 0.16%)</title><rect x="18.6" y="389" width="1.9" height="15.0" fill="rgb(235,222,24)" rx="2" ry="2" />
<text  x="21.62" y="399.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (214,106,259 samples, 0.09%)</title><rect x="1187.2" y="597" width="1.1" height="15.0" fill="rgb(230,73,27)" rx="2" ry="2" />
<text  x="1190.19" y="607.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (72,847,374 samples, 0.03%)</title><rect x="1186.8" y="581" width="0.4" height="15.0" fill="rgb(243,111,26)" rx="2" ry="2" />
<text  x="1189.81" y="591.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (24,785,224 samples, 0.01%)</title><rect x="856.5" y="293" width="0.2" height="15.0" fill="rgb(241,86,47)" rx="2" ry="2" />
<text  x="859.54" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_futex (59,439,365 samples, 0.03%)</title><rect x="442.7" y="341" width="0.3" height="15.0" fill="rgb(215,176,5)" rx="2" ry="2" />
<text  x="445.68" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_openat (29,517,197 samples, 0.01%)</title><rect x="1189.4" y="661" width="0.2" height="15.0" fill="rgb(228,127,17)" rx="2" ry="2" />
<text  x="1192.44" y="671.5" ></text>
</g>
<g >
<title>futex_wait_queue (46,638,441 samples, 0.02%)</title><rect x="10.6" y="309" width="0.2" height="15.0" fill="rgb(206,126,32)" rx="2" ry="2" />
<text  x="13.55" y="319.5" ></text>
</g>
<g >
<title>execlists_submission_tasklet (21,427,912 samples, 0.01%)</title><rect x="436.8" y="261" width="0.1" height="15.0" fill="rgb(245,37,21)" rx="2" ry="2" />
<text  x="439.76" y="271.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;bool&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_state&lt;std::_Bind&lt;threadpool_primes (81,940,987,443 samples, 35.58%)</title><rect x="441.5" y="533" width="419.9" height="15.0" fill="rgb(253,103,25)" rx="2" ry="2" />
<text  x="444.53" y="543.5" >std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__f..</text>
</g>
<g >
<title>tick_sched_timer (25,799,640 samples, 0.01%)</title><rect x="96.9" y="261" width="0.1" height="15.0" fill="rgb(208,65,37)" rx="2" ry="2" />
<text  x="99.86" y="271.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (182,854,205 samples, 0.08%)</title><rect x="437.3" y="309" width="0.9" height="15.0" fill="rgb(230,201,22)" rx="2" ry="2" />
<text  x="440.25" y="319.5" ></text>
</g>
<g >
<title>BENCHMARK (230,107,734,594 samples, 99.93%)</title><rect x="10.0" y="741" width="1179.1" height="15.0" fill="rgb(220,164,28)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >BENCHMARK</text>
</g>
<g >
<title>scheduler_tick (108,632,860 samples, 0.05%)</title><rect x="439.4" y="213" width="0.5" height="15.0" fill="rgb(235,177,37)" rx="2" ry="2" />
<text  x="442.38" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (281,027,259 samples, 0.12%)</title><rect x="858.1" y="261" width="1.4" height="15.0" fill="rgb(242,32,29)" rx="2" ry="2" />
<text  x="861.11" y="271.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (185,868,865 samples, 0.08%)</title><rect x="856.7" y="309" width="1.0" height="15.0" fill="rgb(233,193,41)" rx="2" ry="2" />
<text  x="859.73" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (163,403,708 samples, 0.07%)</title><rect x="12.3" y="373" width="0.8" height="15.0" fill="rgb(241,78,28)" rx="2" ry="2" />
<text  x="15.29" y="383.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;bool, std::_Bind&lt;bool  (84,200,750,225 samples, 36.57%)</title><rect x="10.1" y="501" width="431.4" height="15.0" fill="rgb(238,9,39)" rx="2" ry="2" />
<text  x="13.06" y="511.5" >std::enable_if&lt;is_invocable_r_v&lt;bool, std::_Bind&lt;bool </text>
</g>
<g >
<title>common_interrupt (38,991,032 samples, 0.02%)</title><rect x="1186.5" y="597" width="0.2" height="15.0" fill="rgb(231,136,35)" rx="2" ry="2" />
<text  x="1189.52" y="607.5" ></text>
</g>
<g >
<title>__mcount_internal (304,234,170 samples, 0.13%)</title><rect x="447.7" y="373" width="1.5" height="15.0" fill="rgb(207,185,14)" rx="2" ry="2" />
<text  x="450.69" y="383.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (69,501,737 samples, 0.03%)</title><rect x="858.3" y="245" width="0.3" height="15.0" fill="rgb(240,90,4)" rx="2" ry="2" />
<text  x="861.27" y="255.5" ></text>
</g>
<g >
<title>activate_task (37,902,581 samples, 0.02%)</title><rect x="438.8" y="213" width="0.2" height="15.0" fill="rgb(205,52,47)" rx="2" ry="2" />
<text  x="441.85" y="223.5" ></text>
</g>
<g >
<title>_mcount (1,647,713,537 samples, 0.72%)</title><rect x="517.3" y="341" width="8.4" height="15.0" fill="rgb(205,58,19)" rx="2" ry="2" />
<text  x="520.26" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (218,593,739 samples, 0.09%)</title><rect x="10.2" y="389" width="1.1" height="15.0" fill="rgb(233,146,39)" rx="2" ry="2" />
<text  x="13.17" y="399.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (28,685,174 samples, 0.01%)</title><rect x="96.6" y="309" width="0.1" height="15.0" fill="rgb(250,120,18)" rx="2" ry="2" />
<text  x="99.56" y="319.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (35,713,677 samples, 0.02%)</title><rect x="516.5" y="309" width="0.2" height="15.0" fill="rgb(228,191,30)" rx="2" ry="2" />
<text  x="519.47" y="319.5" ></text>
</g>
<g >
<title>bool std::_Bind&lt;bool  (84,200,750,225 samples, 36.57%)</title><rect x="10.1" y="469" width="431.4" height="15.0" fill="rgb(232,227,29)" rx="2" ry="2" />
<text  x="13.06" y="479.5" >bool std::_Bind&lt;bool </text>
</g>
<g >
<title>tick_sched_handle (128,444,081 samples, 0.06%)</title><rect x="1187.6" y="517" width="0.6" height="15.0" fill="rgb(208,192,8)" rx="2" ry="2" />
<text  x="1190.58" y="527.5" ></text>
</g>
<g >
<title>asm_common_interrupt (28,399,384 samples, 0.01%)</title><rect x="516.3" y="325" width="0.2" height="15.0" fill="rgb(237,209,34)" rx="2" ry="2" />
<text  x="519.31" y="335.5" ></text>
</g>
<g >
<title>futex_wake (71,896,099 samples, 0.03%)</title><rect x="12.4" y="325" width="0.4" height="15.0" fill="rgb(211,103,11)" rx="2" ry="2" />
<text  x="15.41" y="335.5" ></text>
</g>
<g >
<title>__random (554,271,906 samples, 0.24%)</title><rect x="443.7" y="389" width="2.9" height="15.0" fill="rgb(224,31,48)" rx="2" ry="2" />
<text  x="446.71" y="399.5" ></text>
</g>
<g >
<title>__mcount_internal (9,763,066,831 samples, 4.24%)</title><rect x="467.1" y="341" width="50.0" height="15.0" fill="rgb(224,33,54)" rx="2" ry="2" />
<text  x="470.07" y="351.5" >__mco..</text>
</g>
<g >
<title>bool std::__invoke_impl&lt;bool, std::_Bind&lt;bool  (84,200,750,225 samples, 36.57%)</title><rect x="10.1" y="485" width="431.4" height="15.0" fill="rgb(230,42,40)" rx="2" ry="2" />
<text  x="13.06" y="495.5" >bool std::__invoke_impl&lt;bool, std::_Bind&lt;bool </text>
</g>
<g >
<title>psi_task_switch (19,745,129 samples, 0.01%)</title><rect x="860.2" y="245" width="0.1" height="15.0" fill="rgb(227,163,22)" rx="2" ry="2" />
<text  x="863.19" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (264,465,052 samples, 0.11%)</title><rect x="438.7" y="277" width="1.3" height="15.0" fill="rgb(237,120,0)" rx="2" ry="2" />
<text  x="441.66" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;threadpool_primes (81,940,987,443 samples, 35.58%)</title><rect x="441.5" y="437" width="419.9" height="15.0" fill="rgb(214,173,38)" rx="2" ry="2" />
<text  x="444.53" y="447.5" >std::__invoke_result&lt;threadpool_primes</text>
</g>
<g >
<title>__random (628,816,553 samples, 0.27%)</title><rect x="14.1" y="405" width="3.2" height="15.0" fill="rgb(228,195,23)" rx="2" ry="2" />
<text  x="17.05" y="415.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (29,093,878 samples, 0.01%)</title><rect x="857.5" y="197" width="0.1" height="15.0" fill="rgb(213,114,23)" rx="2" ry="2" />
<text  x="860.48" y="207.5" ></text>
</g>
<g >
<title>__libc_start_call_main (63,917,142,840 samples, 27.76%)</title><rect x="861.5" y="725" width="327.6" height="15.0" fill="rgb(228,105,3)" rx="2" ry="2" />
<text  x="864.54" y="735.5" >__libc_start_call_main</text>
</g>
<g >
<title>schedule (21,112,028 samples, 0.01%)</title><rect x="856.6" y="277" width="0.1" height="15.0" fill="rgb(235,207,35)" rx="2" ry="2" />
<text  x="859.55" y="287.5" ></text>
</g>
<g >
<title>update_process_times (149,600,571 samples, 0.06%)</title><rect x="439.2" y="229" width="0.7" height="15.0" fill="rgb(214,184,54)" rx="2" ry="2" />
<text  x="442.18" y="239.5" ></text>
</g>
<g >
<title>__profil_counter (21,183,593 samples, 0.01%)</title><rect x="517.1" y="341" width="0.1" height="15.0" fill="rgb(218,210,43)" rx="2" ry="2" />
<text  x="520.10" y="351.5" ></text>
</g>
<g >
<title>mod_mul (1,615,641,166 samples, 0.70%)</title><rect x="453.6" y="357" width="8.3" height="15.0" fill="rgb(254,133,25)" rx="2" ry="2" />
<text  x="456.63" y="367.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (49,227,663 samples, 0.02%)</title><rect x="516.7" y="293" width="0.3" height="15.0" fill="rgb(205,31,45)" rx="2" ry="2" />
<text  x="519.71" y="303.5" ></text>
</g>
<g >
<title>pick_next_task_fair (20,964,000 samples, 0.01%)</title><rect x="10.6" y="261" width="0.2" height="15.0" fill="rgb(212,175,41)" rx="2" ry="2" />
<text  x="13.64" y="271.5" ></text>
</g>
<g >
<title>mod_pow (19,946,454 samples, 0.01%)</title><rect x="20.9" y="389" width="0.1" height="15.0" fill="rgb(252,61,54)" rx="2" ry="2" />
<text  x="23.91" y="399.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (166,144,181,344 samples, 72.15%)</title><rect x="10.1" y="661" width="851.3" height="15.0" fill="rgb(234,217,16)" rx="2" ry="2" />
<text  x="13.05" y="671.5" >std::call_once&lt;void </text>
</g>
<g >
<title>do_syscall_64 (170,825,483 samples, 0.07%)</title><rect x="10.4" y="373" width="0.9" height="15.0" fill="rgb(233,44,23)" rx="2" ry="2" />
<text  x="13.42" y="383.5" ></text>
</g>
<g >
<title>__mcount_internal (130,784,763 samples, 0.06%)</title><rect x="863.3" y="661" width="0.7" height="15.0" fill="rgb(229,158,11)" rx="2" ry="2" />
<text  x="866.34" y="671.5" ></text>
</g>
<g >
<title>enqueue_task_fair (23,909,682 samples, 0.01%)</title><rect x="438.9" y="197" width="0.1" height="15.0" fill="rgb(205,151,52)" rx="2" ry="2" />
<text  x="441.85" y="207.5" ></text>
</g>
<g >
<title>bool std::_Bind&lt;threadpool_primes (81,940,987,443 samples, 35.58%)</title><rect x="441.5" y="453" width="419.9" height="15.0" fill="rgb(205,120,52)" rx="2" ry="2" />
<text  x="444.53" y="463.5" >bool std::_Bind&lt;threadpool_primes</text>
</g>
<g >
<title>__random_r (146,052,731 samples, 0.06%)</title><rect x="446.6" y="389" width="0.7" height="15.0" fill="rgb(242,102,11)" rx="2" ry="2" />
<text  x="449.55" y="399.5" ></text>
</g>
<g >
<title>naive_primes (63,908,245,973 samples, 27.75%)</title><rect x="861.6" y="693" width="327.4" height="15.0" fill="rgb(223,89,6)" rx="2" ry="2" />
<text  x="864.56" y="703.5" >naive_primes</text>
</g>
<g >
<title>task_work_run (88,160,656 samples, 0.04%)</title><rect x="437.7" y="293" width="0.5" height="15.0" fill="rgb(242,96,9)" rx="2" ry="2" />
<text  x="440.74" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (154,177,455 samples, 0.07%)</title><rect x="439.2" y="245" width="0.7" height="15.0" fill="rgb(243,194,43)" rx="2" ry="2" />
<text  x="442.16" y="255.5" ></text>
</g>
<g >
<title>__schedule (19,712,170 samples, 0.01%)</title><rect x="856.6" y="261" width="0.1" height="15.0" fill="rgb(238,84,22)" rx="2" ry="2" />
<text  x="859.55" y="271.5" ></text>
</g>
<g >
<title>schedule (47,825,711 samples, 0.02%)</title><rect x="437.5" y="293" width="0.2" height="15.0" fill="rgb(248,203,49)" rx="2" ry="2" />
<text  x="440.47" y="303.5" ></text>
</g>
<g >
<title>ttwu_do_activate (39,996,061 samples, 0.02%)</title><rect x="438.8" y="229" width="0.3" height="15.0" fill="rgb(228,170,22)" rx="2" ry="2" />
<text  x="441.85" y="239.5" ></text>
</g>
<g >
<title>__random (211,692,685 samples, 0.09%)</title><rect x="861.6" y="677" width="1.0" height="15.0" fill="rgb(212,194,45)" rx="2" ry="2" />
<text  x="864.56" y="687.5" ></text>
</g>
<g >
<title>pick_next_task_fair (31,123,726 samples, 0.01%)</title><rect x="860.0" y="245" width="0.2" height="15.0" fill="rgb(254,217,10)" rx="2" ry="2" />
<text  x="863.02" y="255.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (25,386,735 samples, 0.01%)</title><rect x="437.0" y="309" width="0.2" height="15.0" fill="rgb(236,114,51)" rx="2" ry="2" />
<text  x="440.02" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_thermal (29,575,701 samples, 0.01%)</title><rect x="440.8" y="341" width="0.1" height="15.0" fill="rgb(214,160,16)" rx="2" ry="2" />
<text  x="443.79" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (96,943,399 samples, 0.04%)</title><rect x="96.5" y="341" width="0.5" height="15.0" fill="rgb(212,196,36)" rx="2" ry="2" />
<text  x="99.53" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (112,177,238 samples, 0.05%)</title><rect x="440.2" y="341" width="0.6" height="15.0" fill="rgb(207,97,28)" rx="2" ry="2" />
<text  x="443.21" y="351.5" ></text>
</g>
<g >
<title>input_pass_values.part.0 (23,993,091 samples, 0.01%)</title><rect x="856.2" y="117" width="0.2" height="15.0" fill="rgb(242,169,38)" rx="2" ry="2" />
<text  x="859.25" y="127.5" ></text>
</g>
<g >
<title>evdev_events (21,670,315 samples, 0.01%)</title><rect x="856.3" y="85" width="0.1" height="15.0" fill="rgb(242,57,47)" rx="2" ry="2" />
<text  x="859.26" y="95.5" ></text>
</g>
<g >
<title>__common_interrupt (64,860,443 samples, 0.03%)</title><rect x="436.4" y="309" width="0.3" height="15.0" fill="rgb(217,41,29)" rx="2" ry="2" />
<text  x="439.37" y="319.5" ></text>
</g>
<g >
<title>__lock_task_sighand (30,397,160 samples, 0.01%)</title><rect x="857.3" y="245" width="0.1" height="15.0" fill="rgb(246,67,3)" rx="2" ry="2" />
<text  x="860.26" y="255.5" ></text>
</g>
<g >
<title>__do_softirq (22,710,702 samples, 0.01%)</title><rect x="1186.6" y="565" width="0.1" height="15.0" fill="rgb(247,89,14)" rx="2" ry="2" />
<text  x="1189.59" y="575.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (166,144,181,344 samples, 72.15%)</title><rect x="10.1" y="629" width="851.3" height="15.0" fill="rgb(250,65,3)" rx="2" ry="2" />
<text  x="13.05" y="639.5" >void std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>__sysvec_thermal (23,839,154 samples, 0.01%)</title><rect x="1188.4" y="581" width="0.2" height="15.0" fill="rgb(214,192,38)" rx="2" ry="2" />
<text  x="1191.44" y="591.5" ></text>
</g>
<g >
<title>hidinput_report_event (25,470,775 samples, 0.01%)</title><rect x="856.2" y="165" width="0.2" height="15.0" fill="rgb(254,147,43)" rx="2" ry="2" />
<text  x="859.25" y="175.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (19,736,019 samples, 0.01%)</title><rect x="1187.8" y="453" width="0.1" height="15.0" fill="rgb(212,128,29)" rx="2" ry="2" />
<text  x="1190.75" y="463.5" ></text>
</g>
<g >
<title>__schedule (76,774,755 samples, 0.03%)</title><rect x="859.9" y="261" width="0.4" height="15.0" fill="rgb(215,209,10)" rx="2" ry="2" />
<text  x="862.91" y="271.5" ></text>
</g>
<g >
<title>futex_wait_setup (47,895,923 samples, 0.02%)</title><rect x="10.8" y="309" width="0.2" height="15.0" fill="rgb(217,130,32)" rx="2" ry="2" />
<text  x="13.79" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;bool  (84,200,750,225 samples, 36.57%)</title><rect x="10.1" y="437" width="431.4" height="15.0" fill="rgb(237,109,17)" rx="2" ry="2" />
<text  x="13.06" y="447.5" >std::__invoke_result&lt;bool </text>
</g>
<g >
<title>posix_cpu_timers_work (30,715,048 samples, 0.01%)</title><rect x="1187.0" y="549" width="0.2" height="15.0" fill="rgb(215,96,13)" rx="2" ry="2" />
<text  x="1190.02" y="559.5" ></text>
</g>
<g >
<title>ep_poll_callback (19,712,233 samples, 0.01%)</title><rect x="856.3" y="37" width="0.1" height="15.0" fill="rgb(237,82,53)" rx="2" ry="2" />
<text  x="859.27" y="47.5" ></text>
</g>
<g >
<title>__schedule (37,766,448 samples, 0.02%)</title><rect x="441.8" y="261" width="0.2" height="15.0" fill="rgb(225,208,1)" rx="2" ry="2" />
<text  x="444.80" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_thermal (29,343,032 samples, 0.01%)</title><rect x="860.4" y="325" width="0.1" height="15.0" fill="rgb(205,11,27)" rx="2" ry="2" />
<text  x="863.37" y="335.5" ></text>
</g>
<g >
<title>_mcount (911,942,965 samples, 0.40%)</title><rect x="889.9" y="629" width="4.7" height="15.0" fill="rgb(214,173,7)" rx="2" ry="2" />
<text  x="892.90" y="639.5" ></text>
</g>
<g >
<title>__lll_lock_wake_private (492,988,822 samples, 0.21%)</title><rect x="11.5" y="405" width="2.6" height="15.0" fill="rgb(232,88,14)" rx="2" ry="2" />
<text  x="14.52" y="415.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;bool&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_state&lt;std::_Bind&lt;bool  (84,201,211,783 samples, 36.57%)</title><rect x="10.1" y="533" width="431.4" height="15.0" fill="rgb(225,24,11)" rx="2" ry="2" />
<text  x="13.05" y="543.5" >std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__fu..</text>
</g>
<g >
<title>hrtimer_interrupt (47,743,526 samples, 0.02%)</title><rect x="516.7" y="277" width="0.3" height="15.0" fill="rgb(247,49,46)" rx="2" ry="2" />
<text  x="519.72" y="287.5" ></text>
</g>
<g >
<title>check_cpu_itimer (36,618,672 samples, 0.02%)</title><rect x="438.0" y="261" width="0.2" height="15.0" fill="rgb(252,100,30)" rx="2" ry="2" />
<text  x="440.99" y="271.5" ></text>
</g>
<g >
<title>__send_signal_locked (43,725,879 samples, 0.02%)</title><rect x="857.4" y="229" width="0.3" height="15.0" fill="rgb(248,134,0)" rx="2" ry="2" />
<text  x="860.44" y="239.5" ></text>
</g>
<g >
<title>hid_input_report (43,671,912 samples, 0.02%)</title><rect x="856.2" y="197" width="0.2" height="15.0" fill="rgb(244,55,10)" rx="2" ry="2" />
<text  x="859.16" y="207.5" ></text>
</g>
<g >
<title>update_process_times (22,563,219 samples, 0.01%)</title><rect x="96.9" y="229" width="0.1" height="15.0" fill="rgb(236,32,41)" rx="2" ry="2" />
<text  x="99.88" y="239.5" ></text>
</g>
<g >
<title>rand (37,343,653 samples, 0.02%)</title><rect x="441.2" y="405" width="0.2" height="15.0" fill="rgb(214,45,7)" rx="2" ry="2" />
<text  x="444.24" y="415.5" ></text>
</g>
<g >
<title>mod_mul (65,338,896,468 samples, 28.37%)</title><rect x="106.4" y="357" width="334.8" height="15.0" fill="rgb(231,118,10)" rx="2" ry="2" />
<text  x="109.42" y="367.5" >mod_mul</text>
</g>
<g >
<title>do_sys_openat2 (28,988,793 samples, 0.01%)</title><rect x="1189.4" y="645" width="0.2" height="15.0" fill="rgb(229,71,18)" rx="2" ry="2" />
<text  x="1192.44" y="655.5" ></text>
</g>
<g >
<title>task_tick_fair (75,973,226 samples, 0.03%)</title><rect x="439.5" y="197" width="0.4" height="15.0" fill="rgb(234,152,53)" rx="2" ry="2" />
<text  x="442.55" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (301,124,117 samples, 0.13%)</title><rect x="438.6" y="309" width="1.5" height="15.0" fill="rgb(227,19,53)" rx="2" ry="2" />
<text  x="441.57" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_futex (71,858,847 samples, 0.03%)</title><rect x="441.8" y="341" width="0.3" height="15.0" fill="rgb(205,37,33)" rx="2" ry="2" />
<text  x="444.75" y="351.5" ></text>
</g>
<g >
<title>__send_signal_locked (22,159,022 samples, 0.01%)</title><rect x="1187.1" y="517" width="0.1" height="15.0" fill="rgb(226,106,26)" rx="2" ry="2" />
<text  x="1190.05" y="527.5" ></text>
</g>
<g >
<title>main (63,917,142,840 samples, 27.76%)</title><rect x="861.5" y="709" width="327.6" height="15.0" fill="rgb(225,228,41)" rx="2" ry="2" />
<text  x="864.54" y="719.5" >main</text>
</g>
<g >
<title>update_curr (24,855,304 samples, 0.01%)</title><rect x="1187.9" y="453" width="0.2" height="15.0" fill="rgb(209,97,35)" rx="2" ry="2" />
<text  x="1190.95" y="463.5" ></text>
</g>
<g >
<title>miller_rabin (80,701,628,815 samples, 35.05%)</title><rect x="447.3" y="389" width="413.5" height="15.0" fill="rgb(224,192,34)" rx="2" ry="2" />
<text  x="450.30" y="399.5" >miller_rabin</text>
</g>
<g >
<title>std::__future_base::_Task_state&lt;std::_Bind&lt;threadpool_primes (81,940,987,443 samples, 35.58%)</title><rect x="441.5" y="517" width="419.9" height="15.0" fill="rgb(206,89,1)" rx="2" ry="2" />
<text  x="444.53" y="527.5" >std::__future_base::_Task_state&lt;std::_Bind&lt;threadpool_pri..</text>
</g>
<g >
<title>handle_edge_irq (59,478,116 samples, 0.03%)</title><rect x="436.4" y="293" width="0.3" height="15.0" fill="rgb(217,181,27)" rx="2" ry="2" />
<text  x="439.40" y="303.5" ></text>
</g>
<g >
<title>common_interrupt (125,885,050 samples, 0.05%)</title><rect x="436.4" y="325" width="0.6" height="15.0" fill="rgb(218,11,33)" rx="2" ry="2" />
<text  x="439.37" y="335.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (24,590,037 samples, 0.01%)</title><rect x="1186.6" y="581" width="0.1" height="15.0" fill="rgb(253,45,32)" rx="2" ry="2" />
<text  x="1189.59" y="591.5" ></text>
</g>
<g >
<title>bool std::_Bind&lt;bool  (84,200,750,225 samples, 36.57%)</title><rect x="10.1" y="453" width="431.4" height="15.0" fill="rgb(251,105,3)" rx="2" ry="2" />
<text  x="13.06" y="463.5" >bool std::_Bind&lt;bool </text>
</g>
<g >
<title>bool std::__invoke_impl&lt;bool, bool  (84,200,750,225 samples, 36.57%)</title><rect x="10.1" y="421" width="431.4" height="15.0" fill="rgb(246,135,37)" rx="2" ry="2" />
<text  x="13.06" y="431.5" >bool std::__invoke_impl&lt;bool, bool </text>
</g>
<g >
<title>__handle_irq_event_percpu (56,621,061 samples, 0.02%)</title><rect x="855.6" y="245" width="0.3" height="15.0" fill="rgb(218,55,2)" rx="2" ry="2" />
<text  x="858.57" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (29,876,382 samples, 0.01%)</title><rect x="857.3" y="229" width="0.1" height="15.0" fill="rgb(233,178,49)" rx="2" ry="2" />
<text  x="860.27" y="239.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (99,555,377 samples, 0.04%)</title><rect x="859.8" y="309" width="0.5" height="15.0" fill="rgb(217,14,47)" rx="2" ry="2" />
<text  x="862.82" y="319.5" ></text>
</g>
<g >
<title>schedule (70,403,096 samples, 0.03%)</title><rect x="440.3" y="293" width="0.4" height="15.0" fill="rgb(237,57,19)" rx="2" ry="2" />
<text  x="443.35" y="303.5" ></text>
</g>
<g >
<title>hid_report_raw_event (39,897,503 samples, 0.02%)</title><rect x="856.2" y="181" width="0.2" height="15.0" fill="rgb(230,15,8)" rx="2" ry="2" />
<text  x="859.18" y="191.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (23,121,933 samples, 0.01%)</title><rect x="436.9" y="245" width="0.1" height="15.0" fill="rgb(232,87,9)" rx="2" ry="2" />
<text  x="439.87" y="255.5" ></text>
</g>
<g >
<title>mod_mul (1,375,176,814 samples, 0.60%)</title><rect x="865.9" y="645" width="7.1" height="15.0" fill="rgb(222,12,5)" rx="2" ry="2" />
<text  x="868.92" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (114,351,536 samples, 0.05%)</title><rect x="442.7" y="357" width="0.5" height="15.0" fill="rgb(242,182,32)" rx="2" ry="2" />
<text  x="445.66" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (582,903,546 samples, 0.25%)</title><rect x="856.7" y="325" width="3.0" height="15.0" fill="rgb(216,179,42)" rx="2" ry="2" />
<text  x="859.68" y="335.5" ></text>
</g>
<g >
<title>gen8_irq_handler (28,313,769 samples, 0.01%)</title><rect x="855.6" y="229" width="0.1" height="15.0" fill="rgb(247,168,36)" rx="2" ry="2" />
<text  x="858.58" y="239.5" ></text>
</g>
<g >
<title>__schedule (22,235,418 samples, 0.01%)</title><rect x="437.0" y="277" width="0.1" height="15.0" fill="rgb(243,160,4)" rx="2" ry="2" />
<text  x="440.03" y="287.5" ></text>
</g>
<g >
<title>__random_r (67,660,068 samples, 0.03%)</title><rect x="862.6" y="677" width="0.4" height="15.0" fill="rgb(218,42,48)" rx="2" ry="2" />
<text  x="865.64" y="687.5" ></text>
</g>
<g >
<title>read (20,147,909 samples, 0.01%)</title><rect x="1189.3" y="693" width="0.1" height="15.0" fill="rgb(219,102,26)" rx="2" ry="2" />
<text  x="1192.30" y="703.5" ></text>
</g>
<g >
<title>ps (157,317,472 samples, 0.07%)</title><rect x="1189.1" y="741" width="0.9" height="15.0" fill="rgb(225,109,54)" rx="2" ry="2" />
<text  x="1192.14" y="751.5" ></text>
</g>
<g >
<title>__wake_up_common (20,665,723 samples, 0.01%)</title><rect x="856.3" y="53" width="0.1" height="15.0" fill="rgb(211,69,54)" rx="2" ry="2" />
<text  x="859.26" y="63.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (75,063,077 samples, 0.03%)</title><rect x="1186.8" y="597" width="0.4" height="15.0" fill="rgb(248,3,7)" rx="2" ry="2" />
<text  x="1189.80" y="607.5" ></text>
</g>
<g >
<title>intel_thermal_interrupt (22,616,378 samples, 0.01%)</title><rect x="1188.4" y="565" width="0.2" height="15.0" fill="rgb(210,181,24)" rx="2" ry="2" />
<text  x="1191.44" y="575.5" ></text>
</g>
<g >
<title>ttwu_do_activate (53,313,646 samples, 0.02%)</title><rect x="858.3" y="213" width="0.3" height="15.0" fill="rgb(253,157,31)" rx="2" ry="2" />
<text  x="861.34" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__future_base::_Result&lt;bool&gt;, std::__future_base::_Result_base::_Deleter&gt; std::__invoke_impl&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;bool&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;bool&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_state&lt;std::_Bind&lt;threadpool_primes (81,940,987,443 samples, 35.58%)</title><rect x="441.5" y="549" width="419.9" height="15.0" fill="rgb(247,208,47)" rx="2" ry="2" />
<text  x="444.53" y="559.5" >std::unique_ptr&lt;std::__future_base::_Result&lt;bool&gt;, std::_..</text>
</g>
<g >
<title>update_process_times (22,896,730 samples, 0.01%)</title><rect x="516.8" y="213" width="0.1" height="15.0" fill="rgb(249,177,0)" rx="2" ry="2" />
<text  x="519.82" y="223.5" ></text>
</g>
<g >
<title>__sigqueue_alloc (33,406,862 samples, 0.01%)</title><rect x="857.5" y="213" width="0.1" height="15.0" fill="rgb(254,37,21)" rx="2" ry="2" />
<text  x="860.46" y="223.5" ></text>
</g>
<g >
<title>schedule (22,675,246 samples, 0.01%)</title><rect x="437.0" y="293" width="0.1" height="15.0" fill="rgb(245,228,51)" rx="2" ry="2" />
<text  x="440.03" y="303.5" ></text>
</g>
<g >
<title>__sysvec_thermal (20,714,406 samples, 0.01%)</title><rect x="440.8" y="309" width="0.1" height="15.0" fill="rgb(252,179,33)" rx="2" ry="2" />
<text  x="443.82" y="319.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (166,144,181,344 samples, 72.15%)</title><rect x="10.1" y="613" width="851.3" height="15.0" fill="rgb(249,55,11)" rx="2" ry="2" />
<text  x="13.05" y="623.5" >std::__future_base::_State_baseV2::_M_do_set</text>
</g>
<g >
<title>update_process_times (140,139,254 samples, 0.06%)</title><rect x="858.8" y="213" width="0.7" height="15.0" fill="rgb(244,31,40)" rx="2" ry="2" />
<text  x="861.77" y="223.5" ></text>
</g>
<g >
<title>[unknown] (103,371,473 samples, 0.04%)</title><rect x="1189.2" y="725" width="0.5" height="15.0" fill="rgb(254,67,6)" rx="2" ry="2" />
<text  x="1192.20" y="735.5" ></text>
</g>
<g >
<title>tasklet_action_common.isra.0 (96,163,404 samples, 0.04%)</title><rect x="856.0" y="261" width="0.5" height="15.0" fill="rgb(225,86,51)" rx="2" ry="2" />
<text  x="859.01" y="271.5" ></text>
</g>
<g >
<title>asm_common_interrupt (224,288,605 samples, 0.10%)</title><rect x="855.5" y="325" width="1.2" height="15.0" fill="rgb(213,184,45)" rx="2" ry="2" />
<text  x="858.53" y="335.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (47,994,636 samples, 0.02%)</title><rect x="436.4" y="261" width="0.3" height="15.0" fill="rgb(214,53,26)" rx="2" ry="2" />
<text  x="439.43" y="271.5" ></text>
</g>
<g >
<title>tick_sched_timer (167,543,330 samples, 0.07%)</title><rect x="858.6" y="245" width="0.9" height="15.0" fill="rgb(247,33,26)" rx="2" ry="2" />
<text  x="861.63" y="255.5" ></text>
</g>
<g >
<title>intel_thermal_interrupt (20,229,666 samples, 0.01%)</title><rect x="440.8" y="293" width="0.1" height="15.0" fill="rgb(233,198,1)" rx="2" ry="2" />
<text  x="443.83" y="303.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (176,809,861 samples, 0.08%)</title><rect x="856.8" y="293" width="0.9" height="15.0" fill="rgb(212,116,9)" rx="2" ry="2" />
<text  x="859.77" y="303.5" ></text>
</g>
<g >
<title>schedule (38,689,561 samples, 0.02%)</title><rect x="441.8" y="277" width="0.2" height="15.0" fill="rgb(231,178,43)" rx="2" ry="2" />
<text  x="444.79" y="287.5" ></text>
</g>
<g >
<title>std::once_flag::_Prepare_execution::_Prepare_execution&lt;std::call_once&lt;void  (166,144,181,344 samples, 72.15%)</title><rect x="10.1" y="677" width="851.3" height="15.0" fill="rgb(237,77,11)" rx="2" ry="2" />
<text  x="13.05" y="687.5" >std::once_flag::_Prepare_execution::_Prepare_execution&lt;std::call_once&lt;void </text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (166,143,151,164 samples, 72.15%)</title><rect x="10.1" y="581" width="851.3" height="15.0" fill="rgb(232,24,53)" rx="2" ry="2" />
<text  x="13.05" y="591.5" >std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt; </text>
</g>
<g >
<title>task_tick_fair (66,667,692 samples, 0.03%)</title><rect x="859.1" y="181" width="0.4" height="15.0" fill="rgb(239,227,53)" rx="2" ry="2" />
<text  x="862.12" y="191.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (47,053,621 samples, 0.02%)</title><rect x="11.1" y="357" width="0.2" height="15.0" fill="rgb(209,28,10)" rx="2" ry="2" />
<text  x="14.05" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_open (37,952,557 samples, 0.02%)</title><rect x="1189.4" y="709" width="0.2" height="15.0" fill="rgb(231,147,4)" rx="2" ry="2" />
<text  x="1192.43" y="719.5" ></text>
</g>
<g >
<title>posix_cpu_timers_work (81,817,065 samples, 0.04%)</title><rect x="437.8" y="277" width="0.4" height="15.0" fill="rgb(219,177,36)" rx="2" ry="2" />
<text  x="440.77" y="287.5" ></text>
</g>
<g >
<title>usb_giveback_urb_bh (68,873,927 samples, 0.03%)</title><rect x="856.1" y="245" width="0.4" height="15.0" fill="rgb(239,149,7)" rx="2" ry="2" />
<text  x="859.15" y="255.5" ></text>
</g>
<g >
<title>update_load_avg (24,544,970 samples, 0.01%)</title><rect x="1188.1" y="453" width="0.1" height="15.0" fill="rgb(219,110,10)" rx="2" ry="2" />
<text  x="1191.08" y="463.5" ></text>
</g>
<g >
<title>futex_wait_setup (24,594,005 samples, 0.01%)</title><rect x="442.0" y="293" width="0.1" height="15.0" fill="rgb(226,223,18)" rx="2" ry="2" />
<text  x="444.99" y="303.5" ></text>
</g>
<g >
<title>miller_rabin (63,567,136,596 samples, 27.60%)</title><rect x="863.0" y="677" width="325.7" height="15.0" fill="rgb(210,226,24)" rx="2" ry="2" />
<text  x="865.99" y="687.5" >miller_rabin</text>
</g>
<g >
<title>__random_r (182,632,193 samples, 0.08%)</title><rect x="17.3" y="405" width="0.9" height="15.0" fill="rgb(233,3,46)" rx="2" ry="2" />
<text  x="20.28" y="415.5" ></text>
</g>
<g >
<title>newidle_balance (20,533,945 samples, 0.01%)</title><rect x="10.6" y="245" width="0.2" height="15.0" fill="rgb(224,54,7)" rx="2" ry="2" />
<text  x="13.65" y="255.5" ></text>
</g>
<g >
<title>tick_sched_timer (173,231,985 samples, 0.08%)</title><rect x="439.1" y="261" width="0.8" height="15.0" fill="rgb(240,229,39)" rx="2" ry="2" />
<text  x="442.06" y="271.5" ></text>
</g>
<g >
<title>gen8_irq_handler (29,096,503 samples, 0.01%)</title><rect x="436.5" y="245" width="0.1" height="15.0" fill="rgb(229,218,8)" rx="2" ry="2" />
<text  x="439.46" y="255.5" ></text>
</g>
<g >
<title>_mcount (105,424,220 samples, 0.05%)</title><rect x="453.1" y="357" width="0.5" height="15.0" fill="rgb(233,73,20)" rx="2" ry="2" />
<text  x="456.09" y="367.5" ></text>
</g>
<g >
<title>futex_wait (111,240,743 samples, 0.05%)</title><rect x="10.5" y="325" width="0.5" height="15.0" fill="rgb(248,116,21)" rx="2" ry="2" />
<text  x="13.47" y="335.5" ></text>
</g>
<g >
<title>mod_pow (79,412,046,761 samples, 34.49%)</title><rect x="34.3" y="373" width="406.9" height="15.0" fill="rgb(233,178,24)" rx="2" ry="2" />
<text  x="37.30" y="383.5" >mod_pow</text>
</g>
<g >
<title>path_openat (21,625,033 samples, 0.01%)</title><rect x="1189.4" y="613" width="0.2" height="15.0" fill="rgb(205,83,17)" rx="2" ry="2" />
<text  x="1192.45" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (88,506,264 samples, 0.04%)</title><rect x="441.7" y="357" width="0.5" height="15.0" fill="rgb(235,177,40)" rx="2" ry="2" />
<text  x="444.74" y="367.5" ></text>
</g>
<g >
<title>schedule (43,681,649 samples, 0.02%)</title><rect x="857.0" y="277" width="0.2" height="15.0" fill="rgb(219,51,47)" rx="2" ry="2" />
<text  x="859.98" y="287.5" ></text>
</g>
<g >
<title>__mcount_internal (2,800,780,518 samples, 1.22%)</title><rect x="875.4" y="629" width="14.4" height="15.0" fill="rgb(245,205,15)" rx="2" ry="2" />
<text  x="878.43" y="639.5" ></text>
</g>
<g >
<title>sysvec_thermal (26,041,824 samples, 0.01%)</title><rect x="1188.4" y="597" width="0.2" height="15.0" fill="rgb(239,79,52)" rx="2" ry="2" />
<text  x="1191.43" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (166,021,303 samples, 0.07%)</title><rect x="442.4" y="373" width="0.8" height="15.0" fill="rgb(232,10,24)" rx="2" ry="2" />
<text  x="445.39" y="383.5" ></text>
</g>
<g >
<title>hid_irq_in (21,733,413 samples, 0.01%)</title><rect x="436.9" y="229" width="0.1" height="15.0" fill="rgb(216,32,17)" rx="2" ry="2" />
<text  x="439.87" y="239.5" ></text>
</g>
<g >
<title>update_curr (24,225,732 samples, 0.01%)</title><rect x="859.2" y="165" width="0.2" height="15.0" fill="rgb(247,120,31)" rx="2" ry="2" />
<text  x="862.23" y="175.5" ></text>
</g>
<g >
<title>__common_interrupt (76,282,415 samples, 0.03%)</title><rect x="855.5" y="293" width="0.4" height="15.0" fill="rgb(229,40,8)" rx="2" ry="2" />
<text  x="858.54" y="303.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (20,665,723 samples, 0.01%)</title><rect x="856.3" y="69" width="0.1" height="15.0" fill="rgb(239,102,0)" rx="2" ry="2" />
<text  x="859.26" y="79.5" ></text>
</g>
<g >
<title>tick_sched_timer (154,610,933 samples, 0.07%)</title><rect x="1187.4" y="533" width="0.8" height="15.0" fill="rgb(248,217,19)" rx="2" ry="2" />
<text  x="1190.44" y="543.5" ></text>
</g>
<g >
<title>error_entry (24,066,023 samples, 0.01%)</title><rect x="1188.6" y="613" width="0.1" height="15.0" fill="rgb(248,166,24)" rx="2" ry="2" />
<text  x="1191.60" y="623.5" ></text>
</g>
<g >
<title>do_futex (56,112,197 samples, 0.02%)</title><rect x="442.7" y="325" width="0.3" height="15.0" fill="rgb(246,6,52)" rx="2" ry="2" />
<text  x="445.69" y="335.5" ></text>
</g>
<g >
<title>mod_mul (1,632,046,436 samples, 0.71%)</title><rect x="25.9" y="373" width="8.4" height="15.0" fill="rgb(206,55,24)" rx="2" ry="2" />
<text  x="28.94" y="383.5" ></text>
</g>
<g >
<title>tasklet_action_common.isra.0 (47,092,518 samples, 0.02%)</title><rect x="436.7" y="277" width="0.3" height="15.0" fill="rgb(219,128,6)" rx="2" ry="2" />
<text  x="439.75" y="287.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (59,217,480 samples, 0.03%)</title><rect x="436.7" y="309" width="0.3" height="15.0" fill="rgb(209,116,5)" rx="2" ry="2" />
<text  x="439.71" y="319.5" ></text>
</g>
<g >
<title>__sigqueue_alloc (23,887,349 samples, 0.01%)</title><rect x="438.0" y="229" width="0.1" height="15.0" fill="rgb(234,9,24)" rx="2" ry="2" />
<text  x="441.02" y="239.5" ></text>
</g>
<g >
<title>bool std::_Bind&lt;threadpool_primes (81,940,987,443 samples, 35.58%)</title><rect x="441.5" y="469" width="419.9" height="15.0" fill="rgb(212,110,13)" rx="2" ry="2" />
<text  x="444.53" y="479.5" >bool std::_Bind&lt;threadpool_primes</text>
</g>
<g >
<title>error_entry (51,712,423 samples, 0.02%)</title><rect x="860.6" y="325" width="0.2" height="15.0" fill="rgb(240,50,53)" rx="2" ry="2" />
<text  x="863.56" y="335.5" ></text>
</g>
<g >
<title>activate_task (50,678,237 samples, 0.02%)</title><rect x="858.3" y="197" width="0.3" height="15.0" fill="rgb(222,176,16)" rx="2" ry="2" />
<text  x="861.34" y="207.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (190,925,939 samples, 0.08%)</title><rect x="437.2" y="325" width="1.0" height="15.0" fill="rgb(218,221,17)" rx="2" ry="2" />
<text  x="440.21" y="335.5" ></text>
</g>
<g >
<title>enqueue_task_fair (30,585,287 samples, 0.01%)</title><rect x="858.4" y="181" width="0.1" height="15.0" fill="rgb(252,159,27)" rx="2" ry="2" />
<text  x="861.35" y="191.5" ></text>
</g>
<g >
<title>asm_common_interrupt (47,064,934 samples, 0.02%)</title><rect x="1186.5" y="613" width="0.3" height="15.0" fill="rgb(213,228,51)" rx="2" ry="2" />
<text  x="1189.52" y="623.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;bool, std::_Bind&lt;threadpool_primes (81,940,987,443 samples, 35.58%)</title><rect x="441.5" y="501" width="419.9" height="15.0" fill="rgb(212,184,17)" rx="2" ry="2" />
<text  x="444.53" y="511.5" >std::enable_if&lt;is_invocable_r_v&lt;bool, std::_Bind&lt;threadpo..</text>
</g>
<g >
<title>rand (48,905,820 samples, 0.02%)</title><rect x="1188.7" y="677" width="0.3" height="15.0" fill="rgb(232,201,13)" rx="2" ry="2" />
<text  x="1191.73" y="687.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (298,746,251 samples, 0.13%)</title><rect x="1186.8" y="613" width="1.5" height="15.0" fill="rgb(241,136,42)" rx="2" ry="2" />
<text  x="1189.76" y="623.5" ></text>
</g>
<g >
<title>scheduler_tick (98,830,399 samples, 0.04%)</title><rect x="1187.7" y="485" width="0.5" height="15.0" fill="rgb(242,54,47)" rx="2" ry="2" />
<text  x="1190.70" y="495.5" ></text>
</g>
<g >
<title>__mcount_internal (193,119,052 samples, 0.08%)</title><rect x="864.6" y="645" width="0.9" height="15.0" fill="rgb(213,99,31)" rx="2" ry="2" />
<text  x="867.56" y="655.5" ></text>
</g>
<g >
<title>tick_sched_handle (23,009,165 samples, 0.01%)</title><rect x="96.9" y="245" width="0.1" height="15.0" fill="rgb(242,155,17)" rx="2" ry="2" />
<text  x="99.87" y="255.5" ></text>
</g>
<g >
<title>mod_mul (65,384,996,305 samples, 28.39%)</title><rect x="525.8" y="341" width="335.0" height="15.0" fill="rgb(253,49,52)" rx="2" ry="2" />
<text  x="528.79" y="351.5" >mod_mul</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (113,012,052 samples, 0.05%)</title><rect x="441.6" y="373" width="0.6" height="15.0" fill="rgb(210,76,0)" rx="2" ry="2" />
<text  x="444.62" y="383.5" ></text>
</g>
<g >
<title>_mcount (29,587,149 samples, 0.01%)</title><rect x="864.0" y="661" width="0.2" height="15.0" fill="rgb(242,3,15)" rx="2" ry="2" />
<text  x="867.01" y="671.5" ></text>
</g>
<g >
<title>do_futex (70,893,531 samples, 0.03%)</title><rect x="441.8" y="325" width="0.3" height="15.0" fill="rgb(211,146,44)" rx="2" ry="2" />
<text  x="444.76" y="335.5" ></text>
</g>
<g >
<title>try_to_wake_up (68,684,853 samples, 0.03%)</title><rect x="858.3" y="229" width="0.3" height="15.0" fill="rgb(237,79,7)" rx="2" ry="2" />
<text  x="861.27" y="239.5" ></text>
</g>
<g >
<title>try_to_wake_up (55,072,953 samples, 0.02%)</title><rect x="438.8" y="245" width="0.3" height="15.0" fill="rgb(243,136,34)" rx="2" ry="2" />
<text  x="441.77" y="255.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (29,593,655 samples, 0.01%)</title><rect x="96.6" y="325" width="0.1" height="15.0" fill="rgb(217,166,19)" rx="2" ry="2" />
<text  x="99.55" y="335.5" ></text>
</g>
<g >
<title>schedule (78,957,791 samples, 0.03%)</title><rect x="859.9" y="277" width="0.4" height="15.0" fill="rgb(212,20,33)" rx="2" ry="2" />
<text  x="862.90" y="287.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (28,835,154 samples, 0.01%)</title><rect x="856.5" y="309" width="0.2" height="15.0" fill="rgb(254,152,7)" rx="2" ry="2" />
<text  x="859.52" y="319.5" ></text>
</g>
<g >
<title>_mcount (39,131,561 samples, 0.02%)</title><rect x="449.3" y="373" width="0.2" height="15.0" fill="rgb(240,110,47)" rx="2" ry="2" />
<text  x="452.30" y="383.5" ></text>
</g>
<g >
<title>futex_wait_queue (39,173,167 samples, 0.02%)</title><rect x="441.8" y="293" width="0.2" height="15.0" fill="rgb(252,39,28)" rx="2" ry="2" />
<text  x="444.79" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_thermal (33,299,205 samples, 0.01%)</title><rect x="1188.4" y="613" width="0.2" height="15.0" fill="rgb(246,23,37)" rx="2" ry="2" />
<text  x="1191.39" y="623.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (58,857,726 samples, 0.03%)</title><rect x="857.7" y="293" width="0.3" height="15.0" fill="rgb(229,195,27)" rx="2" ry="2" />
<text  x="860.73" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (191,409,216 samples, 0.08%)</title><rect x="1187.3" y="581" width="1.0" height="15.0" fill="rgb(242,76,29)" rx="2" ry="2" />
<text  x="1190.30" y="591.5" ></text>
</g>
<g >
<title>arch_do_signal_or_restart (27,657,621 samples, 0.01%)</title><rect x="856.8" y="277" width="0.2" height="15.0" fill="rgb(240,155,43)" rx="2" ry="2" />
<text  x="859.83" y="287.5" ></text>
</g>
<g >
<title>handle_irq_event (63,968,391 samples, 0.03%)</title><rect x="855.6" y="261" width="0.3" height="15.0" fill="rgb(233,6,19)" rx="2" ry="2" />
<text  x="858.56" y="271.5" ></text>
</g>
<g >
<title>threadpool_primes (81,940,501,965 samples, 35.58%)</title><rect x="441.5" y="405" width="419.9" height="15.0" fill="rgb(221,139,7)" rx="2" ry="2" />
<text  x="444.53" y="415.5" >threadpool_primes</text>
</g>
<g >
<title>__schedule (46,345,118 samples, 0.02%)</title><rect x="437.5" y="277" width="0.2" height="15.0" fill="rgb(233,167,13)" rx="2" ry="2" />
<text  x="440.48" y="287.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (27,880,018 samples, 0.01%)</title><rect x="857.3" y="213" width="0.1" height="15.0" fill="rgb(208,215,25)" rx="2" ry="2" />
<text  x="860.27" y="223.5" ></text>
</g>
<g >
<title>xhci_irq (25,982,235 samples, 0.01%)</title><rect x="855.7" y="229" width="0.2" height="15.0" fill="rgb(212,191,41)" rx="2" ry="2" />
<text  x="858.72" y="239.5" ></text>
</g>
<g >
<title>__do_softirq (56,597,090 samples, 0.02%)</title><rect x="436.7" y="293" width="0.3" height="15.0" fill="rgb(240,101,9)" rx="2" ry="2" />
<text  x="439.71" y="303.5" ></text>
</g>
<g >
<title>perf_event_task_tick (20,962,218 samples, 0.01%)</title><rect x="1187.7" y="469" width="0.2" height="15.0" fill="rgb(254,10,23)" rx="2" ry="2" />
<text  x="1190.74" y="479.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (156,548,167 samples, 0.07%)</title><rect x="13.2" y="389" width="0.9" height="15.0" fill="rgb(237,108,41)" rx="2" ry="2" />
<text  x="16.25" y="399.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (88,940,591 samples, 0.04%)</title><rect x="440.3" y="309" width="0.4" height="15.0" fill="rgb(246,128,11)" rx="2" ry="2" />
<text  x="443.29" y="319.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (286,198,488 samples, 0.12%)</title><rect x="10.1" y="405" width="1.4" height="15.0" fill="rgb(215,104,21)" rx="2" ry="2" />
<text  x="13.06" y="415.5" ></text>
</g>
<g >
<title>std::once_flag::_Prepare_execution::_Prepare_execution&lt;std::call_once&lt;void  (166,144,181,344 samples, 72.15%)</title><rect x="10.1" y="693" width="851.3" height="15.0" fill="rgb(208,33,0)" rx="2" ry="2" />
<text  x="13.05" y="703.5" >std::once_flag::_Prepare_execution::_Prepare_execution&lt;std::call_once&lt;void </text>
</g>
<g >
<title>syscall_exit_to_user_mode (64,556,108 samples, 0.03%)</title><rect x="12.8" y="357" width="0.3" height="15.0" fill="rgb(209,209,3)" rx="2" ry="2" />
<text  x="15.80" y="367.5" ></text>
</g>
<g >
<title>mod_mul (57,398,161,910 samples, 24.93%)</title><rect x="894.6" y="629" width="294.1" height="15.0" fill="rgb(205,219,1)" rx="2" ry="2" />
<text  x="897.60" y="639.5" >mod_mul</text>
</g>
<g >
<title>exit_to_user_mode_prepare (34,163,041 samples, 0.01%)</title><rect x="516.5" y="293" width="0.2" height="15.0" fill="rgb(226,38,22)" rx="2" ry="2" />
<text  x="519.48" y="303.5" ></text>
</g>
<g >
<title>__do_softirq (111,648,671 samples, 0.05%)</title><rect x="855.9" y="277" width="0.6" height="15.0" fill="rgb(226,54,3)" rx="2" ry="2" />
<text  x="858.93" y="287.5" ></text>
</g>
<g >
<title>arch_do_signal_or_restart (25,035,935 samples, 0.01%)</title><rect x="437.3" y="293" width="0.2" height="15.0" fill="rgb(214,6,54)" rx="2" ry="2" />
<text  x="440.32" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (27,551,978 samples, 0.01%)</title><rect x="516.8" y="245" width="0.1" height="15.0" fill="rgb(240,165,5)" rx="2" ry="2" />
<text  x="519.80" y="255.5" ></text>
</g>
<g >
<title>task_work_run (33,778,409 samples, 0.01%)</title><rect x="1187.0" y="565" width="0.2" height="15.0" fill="rgb(240,170,21)" rx="2" ry="2" />
<text  x="1190.01" y="575.5" ></text>
</g>
<g >
<title>_mcount (99,847,820 samples, 0.04%)</title><rect x="25.4" y="373" width="0.5" height="15.0" fill="rgb(215,171,52)" rx="2" ry="2" />
<text  x="28.42" y="383.5" ></text>
</g>
<g >
<title>__mcount_internal (561,409,916 samples, 0.24%)</title><rect x="450.2" y="357" width="2.9" height="15.0" fill="rgb(229,177,33)" rx="2" ry="2" />
<text  x="453.21" y="367.5" ></text>
</g>
<g >
<title>pick_next_task_fair (30,054,298 samples, 0.01%)</title><rect x="440.5" y="261" width="0.1" height="15.0" fill="rgb(226,198,20)" rx="2" ry="2" />
<text  x="443.47" y="271.5" ></text>
</g>
<g >
<title>common_interrupt (191,594,829 samples, 0.08%)</title><rect x="855.5" y="309" width="1.0" height="15.0" fill="rgb(253,37,8)" rx="2" ry="2" />
<text  x="858.54" y="319.5" ></text>
</g>
<g >
<title>update_load_avg (29,910,688 samples, 0.01%)</title><rect x="439.8" y="181" width="0.1" height="15.0" fill="rgb(238,155,33)" rx="2" ry="2" />
<text  x="442.78" y="191.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (36,019,541 samples, 0.02%)</title><rect x="437.8" y="229" width="0.2" height="15.0" fill="rgb(220,87,4)" rx="2" ry="2" />
<text  x="440.80" y="239.5" ></text>
</g>
<g >
<title>__lll_lock_wake_private (270,902,088 samples, 0.12%)</title><rect x="442.3" y="389" width="1.4" height="15.0" fill="rgb(214,19,12)" rx="2" ry="2" />
<text  x="445.32" y="399.5" ></text>
</g>
<g >
<title>__irqentry_text_end (42,515,695 samples, 0.02%)</title><rect x="855.3" y="325" width="0.2" height="15.0" fill="rgb(210,201,15)" rx="2" ry="2" />
<text  x="858.30" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (378,333,557 samples, 0.16%)</title><rect x="857.7" y="309" width="2.0" height="15.0" fill="rgb(239,122,35)" rx="2" ry="2" />
<text  x="860.73" y="319.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (76,659,188 samples, 0.03%)</title><rect x="443.3" y="373" width="0.4" height="15.0" fill="rgb(223,224,54)" rx="2" ry="2" />
<text  x="446.31" y="383.5" ></text>
</g>
<g >
<title>witness (82,006,599,646 samples, 35.61%)</title><rect x="21.0" y="389" width="420.2" height="15.0" fill="rgb(218,128,0)" rx="2" ry="2" />
<text  x="24.01" y="399.5" >witness</text>
</g>
<g >
<title>futex_wait (69,008,981 samples, 0.03%)</title><rect x="441.8" y="309" width="0.3" height="15.0" fill="rgb(213,204,40)" rx="2" ry="2" />
<text  x="444.76" y="319.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (26,179,917 samples, 0.01%)</title><rect x="437.0" y="325" width="0.2" height="15.0" fill="rgb(227,2,20)" rx="2" ry="2" />
<text  x="440.02" y="335.5" ></text>
</g>
<g >
<title>__mcount_internal (726,745,742 samples, 0.32%)</title><rect x="21.7" y="373" width="3.7" height="15.0" fill="rgb(233,117,10)" rx="2" ry="2" />
<text  x="24.68" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (112,897,403 samples, 0.05%)</title><rect x="859.8" y="325" width="0.6" height="15.0" fill="rgb(218,45,37)" rx="2" ry="2" />
<text  x="862.79" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (33,733,525 samples, 0.01%)</title><rect x="1189.4" y="677" width="0.2" height="15.0" fill="rgb(228,101,47)" rx="2" ry="2" />
<text  x="1192.44" y="687.5" ></text>
</g>
<g >
<title>__mcount_internal (11,212,472,857 samples, 4.87%)</title><rect x="39.8" y="357" width="57.4" height="15.0" fill="rgb(246,225,33)" rx="2" ry="2" />
<text  x="42.76" y="367.5" >__mcou..</text>
</g>
<g >
<title>__irq_exit_rcu (68,510,042 samples, 0.03%)</title><rect x="438.2" y="309" width="0.4" height="15.0" fill="rgb(215,42,25)" rx="2" ry="2" />
<text  x="441.22" y="319.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (25,042,167 samples, 0.01%)</title><rect x="1187.4" y="517" width="0.2" height="15.0" fill="rgb(236,11,34)" rx="2" ry="2" />
<text  x="1190.45" y="527.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (42,949,753 samples, 0.02%)</title><rect x="11.3" y="389" width="0.2" height="15.0" fill="rgb(219,87,8)" rx="2" ry="2" />
<text  x="14.30" y="399.5" ></text>
</g>
<g >
<title>common_interrupt (22,845,585 samples, 0.01%)</title><rect x="516.3" y="309" width="0.1" height="15.0" fill="rgb(221,79,36)" rx="2" ry="2" />
<text  x="519.31" y="319.5" ></text>
</g>
<g >
<title>handle_irq_event (50,614,493 samples, 0.02%)</title><rect x="436.4" y="277" width="0.3" height="15.0" fill="rgb(243,80,43)" rx="2" ry="2" />
<text  x="439.43" y="287.5" ></text>
</g>
<g >
<title>update_process_times (123,716,926 samples, 0.05%)</title><rect x="1187.6" y="501" width="0.6" height="15.0" fill="rgb(233,213,45)" rx="2" ry="2" />
<text  x="1190.60" y="511.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (92,562,635 samples, 0.04%)</title><rect x="859.9" y="293" width="0.4" height="15.0" fill="rgb(237,131,15)" rx="2" ry="2" />
<text  x="862.86" y="303.5" ></text>
</g>
<g >
<title>update_load_avg (21,599,888 samples, 0.01%)</title><rect x="859.4" y="165" width="0.1" height="15.0" fill="rgb(252,138,2)" rx="2" ry="2" />
<text  x="862.35" y="175.5" ></text>
</g>
<g >
<title>gen8_de_irq_handler.isra.0 (19,750,704 samples, 0.01%)</title><rect x="436.5" y="229" width="0.1" height="15.0" fill="rgb(252,226,28)" rx="2" ry="2" />
<text  x="439.48" y="239.5" ></text>
</g>
<g >
<title>mod_pow (77,850,645,042 samples, 33.81%)</title><rect x="461.9" y="357" width="398.9" height="15.0" fill="rgb(239,2,49)" rx="2" ry="2" />
<text  x="464.91" y="367.5" >mod_pow</text>
</g>
<g >
<title>witness (63,324,343,421 samples, 27.50%)</title><rect x="864.2" y="661" width="324.5" height="15.0" fill="rgb(230,128,31)" rx="2" ry="2" />
<text  x="867.23" y="671.5" >witness</text>
</g>
<g >
<title>bool std::__invoke_impl&lt;bool, threadpool_primes (81,940,501,965 samples, 35.58%)</title><rect x="441.5" y="421" width="419.9" height="15.0" fill="rgb(215,155,25)" rx="2" ry="2" />
<text  x="444.53" y="431.5" >bool std::__invoke_impl&lt;bool, threadpool_primes</text>
</g>
<g >
<title>__irq_exit_rcu (113,500,224 samples, 0.05%)</title><rect x="855.9" y="293" width="0.6" height="15.0" fill="rgb(240,108,50)" rx="2" ry="2" />
<text  x="858.93" y="303.5" ></text>
</g>
<g >
<title>tasklet_action_common.isra.0 (21,169,282 samples, 0.01%)</title><rect x="1186.6" y="549" width="0.1" height="15.0" fill="rgb(231,134,1)" rx="2" ry="2" />
<text  x="1189.60" y="559.5" ></text>
</g>
</g>
</svg>
